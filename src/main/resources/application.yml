spring:
  application:
    name: flight-booking-service
  cloud:
    function:
      definition: subscribePaymentProcessedEvent
    stream:
      bindings:
        subscribePaymentProcessedEvent-in-0:
          destination: flight-booking-payment-processed
          group: ${spring.application.name}
        flightBookingPending-out-0:
          destination: flight-booking-payment-pending
      rabbit:
        bindings:
          flightBookingPending-out-0:
            consumer:
              transacted: true
  lifecycle:
    timeout-per-shutdown-phase: 15s
  r2dbc:
    username: user_postgres
    password: 6eEvI63t20
    url: r2dbc:postgresql://localhost:5432/flight_bookings
    pool:
      max-create-connection-time: 2s
      initial-size: 5
      max-size: 10
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yml
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: jdbc:postgresql://localhost:5432/flight_bookings
  rabbitmq:
    host: localhost
    port: 5672
    username: user_rabbitmq
    password: 9BtVYmvlEp
    connection-timeout: 5s
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:4455/realms/travel-booking-system}

server:
  port: 7788
  shutdown: graceful
  netty:
    connection-timeout: 2s
    idle-timeout: 15s

travel-booking-system:
  flight-service:
    uri: "http://localhost:8899"
    root-api: "/api/v1/flights"
    client:
      timeout: 3
      backoff-attempt: 3
      backoff-min: 100

logging:
  level:
    org:
      springframework:
        cloud:
          function: debug
